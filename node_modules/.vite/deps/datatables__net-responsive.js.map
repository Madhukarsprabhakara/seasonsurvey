{
  "version": 3,
  "sources": ["../../datatables.net-responsive/js/dataTables.responsive.mjs"],
  "sourcesContent": ["/*! Responsive 3.0.2\n * Â© SpryMedia Ltd - datatables.net/license\n */\n\nimport jQuery from 'jquery';\nimport DataTable from 'datatables.net';\n\n// Allow reassignment of the $ variable\nlet $ = jQuery;\n\n\n/**\n * @summary     Responsive\n * @description Responsive tables plug-in for DataTables\n * @version     3.0.2\n * @author      SpryMedia Ltd\n * @copyright   SpryMedia Ltd.\n *\n * This source file is free software, available under the following license:\n *   MIT license - http://datatables.net/license/mit\n *\n * This source file is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.\n *\n * For details please refer to: http://www.datatables.net\n */\n\n/**\n * Responsive is a plug-in for the DataTables library that makes use of\n * DataTables' ability to change the visibility of columns, changing the\n * visibility of columns so the displayed columns fit into the table container.\n * The end result is that complex tables will be dynamically adjusted to fit\n * into the viewport, be it on a desktop, tablet or mobile browser.\n *\n * Responsive for DataTables has two modes of operation, which can used\n * individually or combined:\n *\n * * Class name based control - columns assigned class names that match the\n *   breakpoint logic can be shown / hidden as required for each breakpoint.\n * * Automatic control - columns are automatically hidden when there is no\n *   room left to display them. Columns removed from the right.\n *\n * In additional to column visibility control, Responsive also has built into\n * options to use DataTables' child row display to show / hide the information\n * from the table that has been hidden. There are also two modes of operation\n * for this child row display:\n *\n * * Inline - when the control element that the user can use to show / hide\n *   child rows is displayed inside the first column of the table.\n * * Column - where a whole column is dedicated to be the show / hide control.\n *\n * Initialisation of Responsive is performed by:\n *\n * * Adding the class `responsive` or `dt-responsive` to the table. In this case\n *   Responsive will automatically be initialised with the default configuration\n *   options when the DataTable is created.\n * * Using the `responsive` option in the DataTables configuration options. This\n *   can also be used to specify the configuration options, or simply set to\n *   `true` to use the defaults.\n *\n *  @class\n *  @param {object} settings DataTables settings object for the host table\n *  @param {object} [opts] Configuration options\n *  @requires jQuery 1.7+\n *  @requires DataTables 1.10.3+\n *\n *  @example\n *      $('#example').DataTable( {\n *        responsive: true\n *      } );\n *    } );\n */\nvar Responsive = function (settings, opts) {\n\t// Sanity check that we are using DataTables 1.10 or newer\n\tif (!DataTable.versionCheck || !DataTable.versionCheck('2')) {\n\t\tthrow 'DataTables Responsive requires DataTables 2 or newer';\n\t}\n\n\tthis.s = {\n\t\tchildNodeStore: {},\n\t\tcolumns: [],\n\t\tcurrent: [],\n\t\tdt: new DataTable.Api(settings)\n\t};\n\n\t// Check if responsive has already been initialised on this table\n\tif (this.s.dt.settings()[0].responsive) {\n\t\treturn;\n\t}\n\n\t// details is an object, but for simplicity the user can give it as a string\n\t// or a boolean\n\tif (opts && typeof opts.details === 'string') {\n\t\topts.details = { type: opts.details };\n\t}\n\telse if (opts && opts.details === false) {\n\t\topts.details = { type: false };\n\t}\n\telse if (opts && opts.details === true) {\n\t\topts.details = { type: 'inline' };\n\t}\n\n\tthis.c = $.extend(\n\t\ttrue,\n\t\t{},\n\t\tResponsive.defaults,\n\t\tDataTable.defaults.responsive,\n\t\topts\n\t);\n\tsettings.responsive = this;\n\tthis._constructor();\n};\n\n$.extend(Responsive.prototype, {\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Constructor\n\t */\n\n\t/**\n\t * Initialise the Responsive instance\n\t *\n\t * @private\n\t */\n\t_constructor: function () {\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar oldWindowWidth = $(window).innerWidth();\n\n\t\tdt.settings()[0]._responsive = this;\n\n\t\t// Use DataTables' throttle function to avoid processor thrashing\n\t\t$(window).on(\n\t\t\t'orientationchange.dtr',\n\t\t\tDataTable.util.throttle(function () {\n\t\t\t\t// iOS has a bug whereby resize can fire when only scrolling\n\t\t\t\t// See: http://stackoverflow.com/questions/8898412\n\t\t\t\tvar width = $(window).innerWidth();\n\n\t\t\t\tif (width !== oldWindowWidth) {\n\t\t\t\t\tthat._resize();\n\t\t\t\t\toldWindowWidth = width;\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\n\t\t// Handle new rows being dynamically added - needed as responsive\n\t\t// updates all rows (shown or not) a responsive change, rather than\n\t\t// per draw.\n\t\tdt.on('row-created.dtr', function (e, tr, data, idx) {\n\t\t\tif ($.inArray(false, that.s.current) !== -1) {\n\t\t\t\t$('>td, >th', tr).each(function (i) {\n\t\t\t\t\tvar idx = dt.column.index('toData', i);\n\n\t\t\t\t\tif (that.s.current[idx] === false) {\n\t\t\t\t\t\t$(this)\n\t\t\t\t\t\t\t.css('display', 'none')\n\t\t\t\t\t\t\t.addClass('dtr-hidden');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\t// Destroy event handler\n\t\tdt.on('destroy.dtr', function () {\n\t\t\tdt.off('.dtr');\n\t\t\t$(dt.table().body()).off('.dtr');\n\t\t\t$(window).off('resize.dtr orientationchange.dtr');\n\t\t\tdt.cells('.dtr-control').nodes().to$().removeClass('dtr-control');\n\t\t\t$(dt.table().node()).removeClass('dtr-inline collapsed');\n\n\t\t\t// Restore the columns that we've hidden\n\t\t\t$.each(that.s.current, function (i, val) {\n\t\t\t\tif (val === false) {\n\t\t\t\t\tthat._setColumnVis(i, true);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t// Reorder the breakpoints array here in case they have been added out\n\t\t// of order\n\t\tthis.c.breakpoints.sort(function (a, b) {\n\t\t\treturn a.width < b.width ? 1 : a.width > b.width ? -1 : 0;\n\t\t});\n\n\t\tthis._classLogic();\n\t\tthis._resizeAuto();\n\n\t\t// Details handler\n\t\tvar details = this.c.details;\n\n\t\tif (details.type !== false) {\n\t\t\tthat._detailsInit();\n\n\t\t\t// DataTables will trigger this event on every column it shows and\n\t\t\t// hides individually\n\t\t\tdt.on('column-visibility.dtr', function () {\n\t\t\t\t// Use a small debounce to allow multiple columns to be set together\n\t\t\t\tif (that._timer) {\n\t\t\t\t\tclearTimeout(that._timer);\n\t\t\t\t}\n\n\t\t\t\tthat._timer = setTimeout(function () {\n\t\t\t\t\tthat._timer = null;\n\n\t\t\t\t\tthat._classLogic();\n\t\t\t\t\tthat._resizeAuto();\n\t\t\t\t\tthat._resize(true);\n\n\t\t\t\t\tthat._redrawChildren();\n\t\t\t\t}, 100);\n\t\t\t});\n\n\t\t\t// Redraw the details box on each draw which will happen if the data\n\t\t\t// has changed. This is used until DataTables implements a native\n\t\t\t// `updated` event for rows\n\t\t\tdt.on('draw.dtr', function () {\n\t\t\t\tthat._redrawChildren();\n\t\t\t});\n\n\t\t\t$(dt.table().node()).addClass('dtr-' + details.type);\n\t\t}\n\n\t\tdt.on('column-reorder.dtr', function (e, settings, details) {\n\t\t\tthat._classLogic();\n\t\t\tthat._resizeAuto();\n\t\t\tthat._resize(true);\n\t\t});\n\n\t\t// Change in column sizes means we need to calc\n\t\tdt.on('column-sizing.dtr', function () {\n\t\t\tthat._resizeAuto();\n\t\t\tthat._resize();\n\t\t});\n\n\t\t// DT2 let's us tell it if we are hiding columns\n\t\tdt.on('column-calc.dt', function (e, d) {\n\t\t\tvar curr = that.s.current;\n\n\t\t\tfor (var i = 0; i < curr.length; i++) {\n\t\t\t\tvar idx = d.visible.indexOf(i);\n\n\t\t\t\tif (curr[i] === false && idx >= 0) {\n\t\t\t\t\td.visible.splice(idx, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// On Ajax reload we want to reopen any child rows which are displayed\n\t\t// by responsive\n\t\tdt.on('preXhr.dtr', function () {\n\t\t\tvar rowIds = [];\n\t\t\tdt.rows().every(function () {\n\t\t\t\tif (this.child.isShown()) {\n\t\t\t\t\trowIds.push(this.id(true));\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tdt.one('draw.dtr', function () {\n\t\t\t\tthat._resizeAuto();\n\t\t\t\tthat._resize();\n\n\t\t\t\tdt.rows(rowIds).every(function () {\n\t\t\t\t\tthat._detailsDisplay(this, false);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\n\t\tdt.on('draw.dtr', function () {\n\t\t\tthat._controlClass();\n\t\t}).on('init.dtr', function (e, settings, details) {\n\t\t\tif (e.namespace !== 'dt') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthat._resizeAuto();\n\t\t\tthat._resize();\n\t\t});\n\n\t\t// First pass - draw the table for the current viewport size\n\t\tthis._resize();\n\t},\n\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Private methods\n\t */\n\n\t/**\n\t * Insert a `col` tag into the correct location in a `colgroup`.\n\t *\n\t * @param {jQuery} colGroup The `colgroup` tag\n\t * @param {jQuery} colEl The `col` tag\n\t */\n\t_colGroupAttach: function (colGroup, colEls, idx) {\n\t\tvar found = null;\n\n\t\t// No need to do anything if already attached\n\t\tif (colEls[idx].get(0).parentNode === colGroup[0]) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Find the first `col` after our own which is already attached\n\t\tfor (var i = idx+1; i < colEls.length; i++) {\n\t\t\tif (colGroup[0] === colEls[i].get(0).parentNode) {\n\t\t\t\tfound = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (found !== null) {\n\t\t\t// Insert before\n\t\t\tcolEls[idx].insertBefore(colEls[found][0]);\n\t\t}\n\t\telse {\n\t\t\t// If wasn't found, insert at the end\n\t\t\tcolGroup.append(colEls[idx]);\n\t\t}\n\t},\n\n\t/**\n\t * Get and store nodes from a cell - use for node moving renderers\n\t *\n\t * @param {*} dt DT instance\n\t * @param {*} row Row index\n\t * @param {*} col Column index\n\t */\n\t_childNodes: function (dt, row, col) {\n\t\tvar name = row + '-' + col;\n\n\t\tif (this.s.childNodeStore[name]) {\n\t\t\treturn this.s.childNodeStore[name];\n\t\t}\n\n\t\t// https://jsperf.com/childnodes-array-slice-vs-loop\n\t\tvar nodes = [];\n\t\tvar children = dt.cell(row, col).node().childNodes;\n\t\tfor (var i = 0, ien = children.length; i < ien; i++) {\n\t\t\tnodes.push(children[i]);\n\t\t}\n\n\t\tthis.s.childNodeStore[name] = nodes;\n\n\t\treturn nodes;\n\t},\n\n\t/**\n\t * Restore nodes from the cache to a table cell\n\t *\n\t * @param {*} dt DT instance\n\t * @param {*} row Row index\n\t * @param {*} col Column index\n\t */\n\t_childNodesRestore: function (dt, row, col) {\n\t\tvar name = row + '-' + col;\n\n\t\tif (!this.s.childNodeStore[name]) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar node = dt.cell(row, col).node();\n\t\tvar store = this.s.childNodeStore[name];\n\t\tif (store.length > 0) {\n\t\t\tvar parent = store[0].parentNode;\n\t\t\tvar parentChildren = parent.childNodes;\n\t\t\tvar a = [];\n\n\t\t\tfor (var i = 0, ien = parentChildren.length; i < ien; i++) {\n\t\t\t\ta.push(parentChildren[i]);\n\t\t\t}\n\n\t\t\tfor (var j = 0, jen = a.length; j < jen; j++) {\n\t\t\t\tnode.appendChild(a[j]);\n\t\t\t}\n\t\t}\n\n\t\tthis.s.childNodeStore[name] = undefined;\n\t},\n\n\t/**\n\t * Calculate the visibility for the columns in a table for a given\n\t * breakpoint. The result is pre-determined based on the class logic if\n\t * class names are used to control all columns, but the width of the table\n\t * is also used if there are columns which are to be automatically shown\n\t * and hidden.\n\t *\n\t * @param  {string} breakpoint Breakpoint name to use for the calculation\n\t * @return {array} Array of boolean values initiating the visibility of each\n\t *   column.\n\t *  @private\n\t */\n\t_columnsVisiblity: function (breakpoint) {\n\t\tvar dt = this.s.dt;\n\t\tvar columns = this.s.columns;\n\t\tvar i, ien;\n\n\t\t// Create an array that defines the column ordering based first on the\n\t\t// column's priority, and secondly the column index. This allows the\n\t\t// columns to be removed from the right if the priority matches\n\t\tvar order = columns\n\t\t\t.map(function (col, idx) {\n\t\t\t\treturn {\n\t\t\t\t\tcolumnIdx: idx,\n\t\t\t\t\tpriority: col.priority\n\t\t\t\t};\n\t\t\t})\n\t\t\t.sort(function (a, b) {\n\t\t\t\tif (a.priority !== b.priority) {\n\t\t\t\t\treturn a.priority - b.priority;\n\t\t\t\t}\n\t\t\t\treturn a.columnIdx - b.columnIdx;\n\t\t\t});\n\n\t\t// Class logic - determine which columns are in this breakpoint based\n\t\t// on the classes. If no class control (i.e. `auto`) then `-` is used\n\t\t// to indicate this to the rest of the function\n\t\tvar display = $.map(columns, function (col, i) {\n\t\t\tif (dt.column(i).visible() === false) {\n\t\t\t\treturn 'not-visible';\n\t\t\t}\n\t\t\treturn col.auto && col.minWidth === null\n\t\t\t\t? false\n\t\t\t\t: col.auto === true\n\t\t\t\t? '-'\n\t\t\t\t: $.inArray(breakpoint, col.includeIn) !== -1;\n\t\t});\n\n\t\t// Auto column control - first pass: how much width is taken by the\n\t\t// ones that must be included from the non-auto columns\n\t\tvar requiredWidth = 0;\n\t\tfor (i = 0, ien = display.length; i < ien; i++) {\n\t\t\tif (display[i] === true) {\n\t\t\t\trequiredWidth += columns[i].minWidth;\n\t\t\t}\n\t\t}\n\n\t\t// Second pass, use up any remaining width for other columns. For\n\t\t// scrolling tables we need to subtract the width of the scrollbar. It\n\t\t// may not be requires which makes this sub-optimal, but it would\n\t\t// require another full redraw to make complete use of those extra few\n\t\t// pixels\n\t\tvar scrolling = dt.settings()[0].oScroll;\n\t\tvar bar = scrolling.sY || scrolling.sX ? scrolling.iBarWidth : 0;\n\t\tvar widthAvailable = dt.table().container().offsetWidth - bar;\n\t\tvar usedWidth = widthAvailable - requiredWidth;\n\n\t\t// Control column needs to always be included. This makes it sub-\n\t\t// optimal in terms of using the available with, but to stop layout\n\t\t// thrashing or overflow. Also we need to account for the control column\n\t\t// width first so we know how much width is available for the other\n\t\t// columns, since the control column might not be the first one shown\n\t\tfor (i = 0, ien = display.length; i < ien; i++) {\n\t\t\tif (columns[i].control) {\n\t\t\t\tusedWidth -= columns[i].minWidth;\n\t\t\t}\n\t\t}\n\n\t\t// Allow columns to be shown (counting by priority and then right to\n\t\t// left) until we run out of room\n\t\tvar empty = false;\n\t\tfor (i = 0, ien = order.length; i < ien; i++) {\n\t\t\tvar colIdx = order[i].columnIdx;\n\n\t\t\tif (\n\t\t\t\tdisplay[colIdx] === '-' &&\n\t\t\t\t!columns[colIdx].control &&\n\t\t\t\tcolumns[colIdx].minWidth\n\t\t\t) {\n\t\t\t\t// Once we've found a column that won't fit we don't let any\n\t\t\t\t// others display either, or columns might disappear in the\n\t\t\t\t// middle of the table\n\t\t\t\tif (empty || usedWidth - columns[colIdx].minWidth < 0) {\n\t\t\t\t\tempty = true;\n\t\t\t\t\tdisplay[colIdx] = false;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdisplay[colIdx] = true;\n\t\t\t\t}\n\n\t\t\t\tusedWidth -= columns[colIdx].minWidth;\n\t\t\t}\n\t\t}\n\n\t\t// Determine if the 'control' column should be shown (if there is one).\n\t\t// This is the case when there is a hidden column (that is not the\n\t\t// control column). The two loops look inefficient here, but they are\n\t\t// trivial and will fly through. We need to know the outcome from the\n\t\t// first , before the action in the second can be taken\n\t\tvar showControl = false;\n\n\t\tfor (i = 0, ien = columns.length; i < ien; i++) {\n\t\t\tif (\n\t\t\t\t!columns[i].control &&\n\t\t\t\t!columns[i].never &&\n\t\t\t\tdisplay[i] === false\n\t\t\t) {\n\t\t\t\tshowControl = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, ien = columns.length; i < ien; i++) {\n\t\t\tif (columns[i].control) {\n\t\t\t\tdisplay[i] = showControl;\n\t\t\t}\n\n\t\t\t// Replace not visible string with false from the control column detection above\n\t\t\tif (display[i] === 'not-visible') {\n\t\t\t\tdisplay[i] = false;\n\t\t\t}\n\t\t}\n\n\t\t// Finally we need to make sure that there is at least one column that\n\t\t// is visible\n\t\tif ($.inArray(true, display) === -1) {\n\t\t\tdisplay[0] = true;\n\t\t}\n\n\t\treturn display;\n\t},\n\n\t/**\n\t * Create the internal `columns` array with information about the columns\n\t * for the table. This includes determining which breakpoints the column\n\t * will appear in, based upon class names in the column, which makes up the\n\t * vast majority of this method.\n\t *\n\t * @private\n\t */\n\t_classLogic: function () {\n\t\tvar that = this;\n\t\tvar breakpoints = this.c.breakpoints;\n\t\tvar dt = this.s.dt;\n\t\tvar columns = dt\n\t\t\t.columns()\n\t\t\t.eq(0)\n\t\t\t.map(function (i) {\n\t\t\t\tvar column = this.column(i);\n\t\t\t\tvar className = column.header().className;\n\t\t\t\tvar priority = column.init().responsivePriority;\n\t\t\t\tvar dataPriority = column\n\t\t\t\t\t.header()\n\t\t\t\t\t.getAttribute('data-priority');\n\n\t\t\t\tif (priority === undefined) {\n\t\t\t\t\tpriority =\n\t\t\t\t\t\tdataPriority === undefined || dataPriority === null\n\t\t\t\t\t\t\t? 10000\n\t\t\t\t\t\t\t: dataPriority * 1;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tclassName: className,\n\t\t\t\t\tincludeIn: [],\n\t\t\t\t\tauto: false,\n\t\t\t\t\tcontrol: false,\n\t\t\t\t\tnever: className.match(/\\b(dtr\\-)?never\\b/) ? true : false,\n\t\t\t\t\tpriority: priority\n\t\t\t\t};\n\t\t\t});\n\n\t\t// Simply add a breakpoint to `includeIn` array, ensuring that there are\n\t\t// no duplicates\n\t\tvar add = function (colIdx, name) {\n\t\t\tvar includeIn = columns[colIdx].includeIn;\n\n\t\t\tif ($.inArray(name, includeIn) === -1) {\n\t\t\t\tincludeIn.push(name);\n\t\t\t}\n\t\t};\n\n\t\tvar column = function (colIdx, name, operator, matched) {\n\t\t\tvar size, i, ien;\n\n\t\t\tif (!operator) {\n\t\t\t\tcolumns[colIdx].includeIn.push(name);\n\t\t\t}\n\t\t\telse if (operator === 'max-') {\n\t\t\t\t// Add this breakpoint and all smaller\n\t\t\t\tsize = that._find(name).width;\n\n\t\t\t\tfor (i = 0, ien = breakpoints.length; i < ien; i++) {\n\t\t\t\t\tif (breakpoints[i].width <= size) {\n\t\t\t\t\t\tadd(colIdx, breakpoints[i].name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (operator === 'min-') {\n\t\t\t\t// Add this breakpoint and all larger\n\t\t\t\tsize = that._find(name).width;\n\n\t\t\t\tfor (i = 0, ien = breakpoints.length; i < ien; i++) {\n\t\t\t\t\tif (breakpoints[i].width >= size) {\n\t\t\t\t\t\tadd(colIdx, breakpoints[i].name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (operator === 'not-') {\n\t\t\t\t// Add all but this breakpoint\n\t\t\t\tfor (i = 0, ien = breakpoints.length; i < ien; i++) {\n\t\t\t\t\tif (breakpoints[i].name.indexOf(matched) === -1) {\n\t\t\t\t\t\tadd(colIdx, breakpoints[i].name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// Loop over each column and determine if it has a responsive control\n\t\t// class\n\t\tcolumns.each(function (col, i) {\n\t\t\tvar classNames = col.className.split(' ');\n\t\t\tvar hasClass = false;\n\n\t\t\t// Split the class name up so multiple rules can be applied if needed\n\t\t\tfor (var k = 0, ken = classNames.length; k < ken; k++) {\n\t\t\t\tvar className = classNames[k].trim();\n\n\t\t\t\tif (className === 'all' || className === 'dtr-all') {\n\t\t\t\t\t// Include in all\n\t\t\t\t\thasClass = true;\n\t\t\t\t\tcol.includeIn = $.map(breakpoints, function (a) {\n\t\t\t\t\t\treturn a.name;\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\telse if (\n\t\t\t\t\tclassName === 'none' ||\n\t\t\t\t\tclassName === 'dtr-none' ||\n\t\t\t\t\tcol.never\n\t\t\t\t) {\n\t\t\t\t\t// Include in none (default) and no auto\n\t\t\t\t\thasClass = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\telse if (\n\t\t\t\t\tclassName === 'control' ||\n\t\t\t\t\tclassName === 'dtr-control'\n\t\t\t\t) {\n\t\t\t\t\t// Special column that is only visible, when one of the other\n\t\t\t\t\t// columns is hidden. This is used for the details control\n\t\t\t\t\thasClass = true;\n\t\t\t\t\tcol.control = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t$.each(breakpoints, function (j, breakpoint) {\n\t\t\t\t\t// Does this column have a class that matches this breakpoint?\n\t\t\t\t\tvar brokenPoint = breakpoint.name.split('-');\n\t\t\t\t\tvar re = new RegExp(\n\t\t\t\t\t\t'(min\\\\-|max\\\\-|not\\\\-)?(' +\n\t\t\t\t\t\t\tbrokenPoint[0] +\n\t\t\t\t\t\t\t')(\\\\-[_a-zA-Z0-9])?'\n\t\t\t\t\t);\n\t\t\t\t\tvar match = className.match(re);\n\n\t\t\t\t\tif (match) {\n\t\t\t\t\t\thasClass = true;\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tmatch[2] === brokenPoint[0] &&\n\t\t\t\t\t\t\tmatch[3] === '-' + brokenPoint[1]\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t// Class name matches breakpoint name fully\n\t\t\t\t\t\t\tcolumn(\n\t\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t\t\tbreakpoint.name,\n\t\t\t\t\t\t\t\tmatch[1],\n\t\t\t\t\t\t\t\tmatch[2] + match[3]\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (match[2] === brokenPoint[0] && !match[3]) {\n\t\t\t\t\t\t\t// Class name matched primary breakpoint name with no qualifier\n\t\t\t\t\t\t\tcolumn(i, breakpoint.name, match[1], match[2]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// If there was no control class, then automatic sizing is used\n\t\t\tif (!hasClass) {\n\t\t\t\tcol.auto = true;\n\t\t\t}\n\t\t});\n\n\t\tthis.s.columns = columns;\n\t},\n\n\t/**\n\t * Update the cells to show the correct control class / button\n\t * @private\n\t */\n\t_controlClass: function () {\n\t\tif (this.c.details.type === 'inline') {\n\t\t\tvar dt = this.s.dt;\n\t\t\tvar columnsVis = this.s.current;\n\t\t\tvar firstVisible = $.inArray(true, columnsVis);\n\n\t\t\t// Remove from any cells which shouldn't have it\n\t\t\tdt.cells(\n\t\t\t\tnull,\n\t\t\t\tfunction (idx) {\n\t\t\t\t\treturn idx !== firstVisible;\n\t\t\t\t},\n\t\t\t\t{ page: 'current' }\n\t\t\t)\n\t\t\t\t.nodes()\n\t\t\t\t.to$()\n\t\t\t\t.filter('.dtr-control')\n\t\t\t\t.removeClass('dtr-control');\n\n\t\t\tdt.cells(null, firstVisible, { page: 'current' })\n\t\t\t\t.nodes()\n\t\t\t\t.to$()\n\t\t\t\t.addClass('dtr-control');\n\t\t}\n\t},\n\n\t/**\n\t * Show the details for the child row\n\t *\n\t * @param  {DataTables.Api} row    API instance for the row\n\t * @param  {boolean}        update Update flag\n\t * @private\n\t */\n\t_detailsDisplay: function (row, update) {\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar details = this.c.details;\n\t\tvar event = function (res) {\n\t\t\t$(row.node()).toggleClass('dtr-expanded', res !== false);\n\t\t\t$(dt.table().node()).triggerHandler('responsive-display.dt', [\n\t\t\t\tdt,\n\t\t\t\trow,\n\t\t\t\tres,\n\t\t\t\tupdate\n\t\t\t]);\n\t\t};\n\n\t\tif (details && details.type !== false) {\n\t\t\tvar renderer =\n\t\t\t\ttypeof details.renderer === 'string'\n\t\t\t\t\t? Responsive.renderer[details.renderer]()\n\t\t\t\t\t: details.renderer;\n\n\t\t\tvar res = details.display(\n\t\t\t\trow,\n\t\t\t\tupdate,\n\t\t\t\tfunction () {\n\t\t\t\t\treturn renderer.call(\n\t\t\t\t\t\tthat,\n\t\t\t\t\t\tdt,\n\t\t\t\t\t\trow[0][0],\n\t\t\t\t\t\tthat._detailsObj(row[0])\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\tfunction () {\n\t\t\t\t\tevent(false);\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tif (typeof res === 'boolean') {\n\t\t\t\tevent(res);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Initialisation for the details handler\n\t *\n\t * @private\n\t */\n\t_detailsInit: function () {\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar details = this.c.details;\n\n\t\t// The inline type always uses the first child as the target\n\t\tif (details.type === 'inline') {\n\t\t\tdetails.target = 'td.dtr-control, th.dtr-control';\n\t\t}\n\n\t\t// Keyboard accessibility\n\t\tdt.on('draw.dtr', function () {\n\t\t\tthat._tabIndexes();\n\t\t});\n\t\tthat._tabIndexes(); // Initial draw has already happened\n\n\t\t$(dt.table().body()).on('keyup.dtr', 'td, th', function (e) {\n\t\t\tif (e.keyCode === 13 && $(this).data('dtr-keyboard')) {\n\t\t\t\t$(this).click();\n\t\t\t}\n\t\t});\n\n\t\t// type.target can be a string jQuery selector or a column index\n\t\tvar target = details.target;\n\t\tvar selector = typeof target === 'string' ? target : 'td, th';\n\n\t\tif (target !== undefined || target !== null) {\n\t\t\t// Click handler to show / hide the details rows when they are available\n\t\t\t$(dt.table().body()).on(\n\t\t\t\t'click.dtr mousedown.dtr mouseup.dtr',\n\t\t\t\tselector,\n\t\t\t\tfunction (e) {\n\t\t\t\t\t// If the table is not collapsed (i.e. there is no hidden columns)\n\t\t\t\t\t// then take no action\n\t\t\t\t\tif (!$(dt.table().node()).hasClass('collapsed')) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check that the row is actually a DataTable's controlled node\n\t\t\t\t\tif (\n\t\t\t\t\t\t$.inArray(\n\t\t\t\t\t\t\t$(this).closest('tr').get(0),\n\t\t\t\t\t\t\tdt.rows().nodes().toArray()\n\t\t\t\t\t\t) === -1\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// For column index, we determine if we should act or not in the\n\t\t\t\t\t// handler - otherwise it is already okay\n\t\t\t\t\tif (typeof target === 'number') {\n\t\t\t\t\t\tvar targetIdx =\n\t\t\t\t\t\t\ttarget < 0\n\t\t\t\t\t\t\t\t? dt.columns().eq(0).length + target\n\t\t\t\t\t\t\t\t: target;\n\n\t\t\t\t\t\tif (dt.cell(this).index().column !== targetIdx) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// $().closest() includes itself in its check\n\t\t\t\t\tvar row = dt.row($(this).closest('tr'));\n\n\t\t\t\t\t// Check event type to do an action\n\t\t\t\t\tif (e.type === 'click') {\n\t\t\t\t\t\t// The renderer is given as a function so the caller can execute it\n\t\t\t\t\t\t// only when they need (i.e. if hiding there is no point is running\n\t\t\t\t\t\t// the renderer)\n\t\t\t\t\t\tthat._detailsDisplay(row, false);\n\t\t\t\t\t}\n\t\t\t\t\telse if (e.type === 'mousedown') {\n\t\t\t\t\t\t// For mouse users, prevent the focus ring from showing\n\t\t\t\t\t\t$(this).css('outline', 'none');\n\t\t\t\t\t}\n\t\t\t\t\telse if (e.type === 'mouseup') {\n\t\t\t\t\t\t// And then re-allow at the end of the click\n\t\t\t\t\t\t$(this).trigger('blur').css('outline', '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t},\n\n\t/**\n\t * Get the details to pass to a renderer for a row\n\t * @param  {int} rowIdx Row index\n\t * @private\n\t */\n\t_detailsObj: function (rowIdx) {\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\n\t\treturn $.map(this.s.columns, function (col, i) {\n\t\t\t// Never and control columns should not be passed to the renderer\n\t\t\tif (col.never || col.control) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar dtCol = dt.settings()[0].aoColumns[i];\n\n\t\t\treturn {\n\t\t\t\tclassName: dtCol.sClass,\n\t\t\t\tcolumnIndex: i,\n\t\t\t\tdata: dt.cell(rowIdx, i).render(that.c.orthogonal),\n\t\t\t\thidden: dt.column(i).visible() && !that.s.current[i],\n\t\t\t\trowIndex: rowIdx,\n\t\t\t\ttitle: dt.column(i).title()\n\t\t\t};\n\t\t});\n\t},\n\n\t/**\n\t * Find a breakpoint object from a name\n\t *\n\t * @param  {string} name Breakpoint name to find\n\t * @return {object}      Breakpoint description object\n\t * @private\n\t */\n\t_find: function (name) {\n\t\tvar breakpoints = this.c.breakpoints;\n\n\t\tfor (var i = 0, ien = breakpoints.length; i < ien; i++) {\n\t\t\tif (breakpoints[i].name === name) {\n\t\t\t\treturn breakpoints[i];\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Re-create the contents of the child rows as the display has changed in\n\t * some way.\n\t *\n\t * @private\n\t */\n\t_redrawChildren: function () {\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\n\t\tdt.rows({ page: 'current' }).iterator('row', function (settings, idx) {\n\t\t\tthat._detailsDisplay(dt.row(idx), true);\n\t\t});\n\t},\n\n\t/**\n\t * Alter the table display for a resized viewport. This involves first\n\t * determining what breakpoint the window currently is in, getting the\n\t * column visibilities to apply and then setting them.\n\t *\n\t * @param  {boolean} forceRedraw Force a redraw\n\t * @private\n\t */\n\t_resize: function (forceRedraw) {\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar width = $(window).innerWidth();\n\t\tvar breakpoints = this.c.breakpoints;\n\t\tvar breakpoint = breakpoints[0].name;\n\t\tvar columns = this.s.columns;\n\t\tvar i, ien;\n\t\tvar oldVis = this.s.current.slice();\n\n\t\t// Determine what breakpoint we are currently at\n\t\tfor (i = breakpoints.length - 1; i >= 0; i--) {\n\t\t\tif (width <= breakpoints[i].width) {\n\t\t\t\tbreakpoint = breakpoints[i].name;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// Show the columns for that break point\n\t\tvar columnsVis = this._columnsVisiblity(breakpoint);\n\t\tthis.s.current = columnsVis;\n\n\t\t// Set the class before the column visibility is changed so event\n\t\t// listeners know what the state is. Need to determine if there are\n\t\t// any columns that are not visible but can be shown\n\t\tvar collapsedClass = false;\n\n\t\tfor (i = 0, ien = columns.length; i < ien; i++) {\n\t\t\tif (\n\t\t\t\tcolumnsVis[i] === false &&\n\t\t\t\t!columns[i].never &&\n\t\t\t\t!columns[i].control &&\n\t\t\t\t!dt.column(i).visible() === false\n\t\t\t) {\n\t\t\t\tcollapsedClass = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t$(dt.table().node()).toggleClass('collapsed', collapsedClass);\n\n\t\tvar changed = false;\n\t\tvar visible = 0;\n\t\tvar dtSettings = dt.settings()[0];\n\t\tvar colGroup = $(dt.table().node()).children('colgroup');\n\t\tvar colEls = dtSettings.aoColumns.map(function (col) {\n\t\t\treturn col.colEl;\n\t\t});\n\n\t\tdt.columns()\n\t\t\t.eq(0)\n\t\t\t.each(function (colIdx, i) {\n\t\t\t\t//console.log(colIdx, i);\n\t\t\t\t// Do nothing on DataTables' hidden column - DT removes it from the table\n\t\t\t\t// so we need to slide back\n\t\t\t\tif (! dt.column(colIdx).visible()) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (columnsVis[i] === true) {\n\t\t\t\t\tvisible++;\n\t\t\t\t}\n\n\t\t\t\tif (forceRedraw || columnsVis[i] !== oldVis[i]) {\n\t\t\t\t\tchanged = true;\n\t\t\t\t\tthat._setColumnVis(colIdx, columnsVis[i]);\n\t\t\t\t}\n\n\t\t\t\t// DataTables 2 uses `col` to define the width for a column\n\t\t\t\t// and this needs to run each time, as DataTables will change\n\t\t\t\t// the column width. We may need to reattach if we've removed\n\t\t\t\t// an element previously.\n\t\t\t\tif (! columnsVis[i]) {\n\t\t\t\t\tcolEls[i].detach();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthat._colGroupAttach(colGroup, colEls, i);\n\t\t\t\t}\n\t\t\t});\n\n\t\tif (changed) {\n\t\t\tdt.columns.adjust();\n\n\t\t\tthis._redrawChildren();\n\n\t\t\t// Inform listeners of the change\n\t\t\t$(dt.table().node()).trigger('responsive-resize.dt', [\n\t\t\t\tdt,\n\t\t\t\tthis._responsiveOnlyHidden()\n\t\t\t]);\n\n\t\t\t// If no records, update the \"No records\" display element\n\t\t\tif (dt.page.info().recordsDisplay === 0) {\n\t\t\t\t$('td', dt.table().body()).eq(0).attr('colspan', visible);\n\t\t\t}\n\t\t}\n\n\t\tthat._controlClass();\n\t},\n\n\t/**\n\t * Determine the width of each column in the table so the auto column hiding\n\t * has that information to work with. This method is never going to be 100%\n\t * perfect since column widths can change slightly per page, but without\n\t * seriously compromising performance this is quite effective.\n\t *\n\t * @private\n\t */\n\t_resizeAuto: function () {\n\t\tvar dt = this.s.dt;\n\t\tvar columns = this.s.columns;\n\t\tvar that = this;\n\t\tvar visibleColumns = dt\n\t\t\t.columns()\n\t\t\t.indexes()\n\t\t\t.filter(function (idx) {\n\t\t\t\treturn dt.column(idx).visible();\n\t\t\t});\n\n\t\t// Are we allowed to do auto sizing?\n\t\tif (!this.c.auto) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Are there any columns that actually need auto-sizing, or do they all\n\t\t// have classes defined\n\t\tif (\n\t\t\t$.inArray(\n\t\t\t\ttrue,\n\t\t\t\t$.map(columns, function (c) {\n\t\t\t\t\treturn c.auto;\n\t\t\t\t})\n\t\t\t) === -1\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Clone the table with the current data in it\n\t\tvar clonedTable = dt.table().node().cloneNode(false);\n\t\tvar clonedHeader = $(dt.table().header().cloneNode(false)).appendTo(\n\t\t\tclonedTable\n\t\t);\n\t\tvar clonedFooter = $(dt.table().footer().cloneNode(false)).appendTo(\n\t\t\tclonedTable\n\t\t);\n\t\tvar clonedBody = $(dt.table().body())\n\t\t\t.clone(false, false)\n\t\t\t.empty()\n\t\t\t.appendTo(clonedTable); // use jQuery because of IE8\n\n\t\tclonedTable.style.width = 'auto';\n\n\t\t// Header\n\t\tdt.table()\n\t\t\t.header.structure(visibleColumns)\n\t\t\t.forEach((row) => {\n\t\t\t\tvar cells = row\n\t\t\t\t\t.filter(function (el) {\n\t\t\t\t\t\treturn el ? true : false;\n\t\t\t\t\t})\n\t\t\t\t\t.map(function (el) {\n\t\t\t\t\t\treturn $(el.cell)\n\t\t\t\t\t\t\t.clone(false)\n\t\t\t\t\t\t\t.css('display', 'table-cell')\n\t\t\t\t\t\t\t.css('width', 'auto')\n\t\t\t\t\t\t\t.css('min-width', 0);\n\t\t\t\t\t});\n\n\t\t\t\t$('<tr/>').append(cells).appendTo(clonedHeader);\n\t\t\t});\n\n\t\t// Always need an empty row that we can read widths from\n\t\tvar emptyRow = $('<tr/>').appendTo(clonedBody);\n\n\t\tfor (var i = 0; i < visibleColumns.count(); i++) {\n\t\t\temptyRow.append('<td/>');\n\t\t}\n\n\t\t// Body rows\n\t\tdt.rows({ page: 'current' }).every(function (rowIdx) {\n\t\t\tvar node = this.node();\n\n\t\t\tif (! node) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// We clone the table's rows and cells to create the sizing table\n\t\t\tvar tr = node.cloneNode(false);\n\n\t\t\tdt.cells(rowIdx, visibleColumns).every(function (rowIdx2, colIdx) {\n\t\t\t\t// If nodes have been moved out (listHiddenNodes), we need to\n\t\t\t\t// clone from the store\n\t\t\t\tvar store = that.s.childNodeStore[rowIdx + '-' + colIdx];\n\n\t\t\t\tif (store) {\n\t\t\t\t\t$(this.node().cloneNode(false))\n\t\t\t\t\t\t.append($(store).clone())\n\t\t\t\t\t\t.appendTo(tr);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t$(this.node()).clone(false).appendTo(tr);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tclonedBody.append(tr);\n\t\t});\n\n\t\t// Any cells which were hidden by Responsive in the host table, need to\n\t\t// be visible here for the calculations\n\t\tclonedBody.find('th, td').css('display', '');\n\n\t\t// Footer\n\t\tdt.table()\n\t\t\t.footer.structure(visibleColumns)\n\t\t\t.forEach((row) => {\n\t\t\t\tvar cells = row\n\t\t\t\t\t.filter(function (el) {\n\t\t\t\t\t\treturn el ? true : false;\n\t\t\t\t\t})\n\t\t\t\t\t.map(function (el) {\n\t\t\t\t\t\treturn $(el.cell)\n\t\t\t\t\t\t\t.clone(false)\n\t\t\t\t\t\t\t.css('display', 'table-cell')\n\t\t\t\t\t\t\t.css('width', 'auto')\n\t\t\t\t\t\t\t.css('min-width', 0);\n\t\t\t\t\t});\n\n\t\t\t\t$('<tr/>').append(cells).appendTo(clonedFooter);\n\t\t\t});\n\n\t\t// In the inline case extra padding is applied to the first column to\n\t\t// give space for the show / hide icon. We need to use this in the\n\t\t// calculation\n\t\tif (this.c.details.type === 'inline') {\n\t\t\t$(clonedTable).addClass('dtr-inline collapsed');\n\t\t}\n\n\t\t// It is unsafe to insert elements with the same name into the DOM\n\t\t// multiple times. For example, cloning and inserting a checked radio\n\t\t// clears the chcecked state of the original radio.\n\t\t$(clonedTable).find('[name]').removeAttr('name');\n\n\t\t// A position absolute table would take the table out of the flow of\n\t\t// our container element, bypassing the height and width (Scroller)\n\t\t$(clonedTable).css('position', 'relative');\n\n\t\tvar inserted = $('<div/>')\n\t\t\t.css({\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1,\n\t\t\t\toverflow: 'hidden',\n\t\t\t\tclear: 'both'\n\t\t\t})\n\t\t\t.append(clonedTable);\n\n\t\tinserted.insertBefore(dt.table().node());\n\n\t\t// The cloned table now contains the smallest that each column can be\n\t\temptyRow.children().each(function (i) {\n\t\t\tvar idx = dt.column.index('fromVisible', i);\n\t\t\tcolumns[idx].minWidth = this.offsetWidth || 0;\n\t\t});\n\n\t\tinserted.remove();\n\t},\n\n\t/**\n\t * Get the state of the current hidden columns - controlled by Responsive only\n\t */\n\t_responsiveOnlyHidden: function () {\n\t\tvar dt = this.s.dt;\n\n\t\treturn $.map(this.s.current, function (v, i) {\n\t\t\t// If the column is hidden by DataTables then it can't be hidden by\n\t\t\t// Responsive!\n\t\t\tif (dt.column(i).visible() === false) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn v;\n\t\t});\n\t},\n\n\t/**\n\t * Set a column's visibility.\n\t *\n\t * We don't use DataTables' column visibility controls in order to ensure\n\t * that column visibility can Responsive can no-exist. Since only IE8+ is\n\t * supported (and all evergreen browsers of course) the control of the\n\t * display attribute works well.\n\t *\n\t * @param {integer} col      Column index\n\t * @param {boolean} showHide Show or hide (true or false)\n\t * @private\n\t */\n\t_setColumnVis: function (col, showHide) {\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar display = showHide ? '' : 'none'; // empty string will remove the attr\n\n\t\tthis._setHeaderVis(col, showHide, dt.table().header.structure());\n\t\tthis._setHeaderVis(col, showHide, dt.table().footer.structure());\n\n\t\tdt.column(col)\n\t\t\t.nodes()\n\t\t\t.to$()\n\t\t\t.css('display', display)\n\t\t\t.toggleClass('dtr-hidden', !showHide);\n\n\t\t// If the are child nodes stored, we might need to reinsert them\n\t\tif (!$.isEmptyObject(this.s.childNodeStore)) {\n\t\t\tdt.cells(null, col)\n\t\t\t\t.indexes()\n\t\t\t\t.each(function (idx) {\n\t\t\t\t\tthat._childNodesRestore(dt, idx.row, idx.column);\n\t\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * Set the a column's visibility, taking into account multiple rows\n\t * in a header / footer and colspan attributes\n\t * @param {*} col\n\t * @param {*} showHide\n\t * @param {*} structure\n\t */\n\t_setHeaderVis: function (col, showHide, structure) {\n\t\tvar that = this;\n\t\tvar display = showHide ? '' : 'none';\n\n\t\tstructure.forEach(function (row) {\n\t\t\tif (row[col]) {\n\t\t\t\t$(row[col].cell)\n\t\t\t\t\t.css('display', display)\n\t\t\t\t\t.toggleClass('dtr-hidden', !showHide);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// In a colspan - need to rewind calc the new span since\n\t\t\t\t// display:none elements do not count as being spanned over\n\t\t\t\tvar search = col;\n\n\t\t\t\twhile (search >= 0) {\n\t\t\t\t\tif (row[search]) {\n\t\t\t\t\t\trow[search].cell.colSpan = that._colspan(row, search);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tsearch--;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n\t * How many columns should this cell span\n\t *\n\t * @param {*} row Header structure row\n\t * @param {*} idx The column index of the cell to span\n\t */\n\t_colspan: function (row, idx) {\n\t\tvar colspan = 1;\n\n\t\tfor (var col = idx + 1; col < row.length; col++) {\n\t\t\tif (row[col] === null && this.s.current[col]) {\n\t\t\t\t// colspan and not hidden by Responsive\n\t\t\t\tcolspan++;\n\t\t\t}\n\t\t\telse if (row[col]) {\n\t\t\t\t// Got the next cell, jump out\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn colspan;\n\t},\n\n\t/**\n\t * Update the cell tab indexes for keyboard accessibility. This is called on\n\t * every table draw - that is potentially inefficient, but also the least\n\t * complex option given that column visibility can change on the fly. Its a\n\t * shame user-focus was removed from CSS 3 UI, as it would have solved this\n\t * issue with a single CSS statement.\n\t *\n\t * @private\n\t */\n\t_tabIndexes: function () {\n\t\tvar dt = this.s.dt;\n\t\tvar cells = dt.cells({ page: 'current' }).nodes().to$();\n\t\tvar ctx = dt.settings()[0];\n\t\tvar target = this.c.details.target;\n\n\t\tcells.filter('[data-dtr-keyboard]').removeData('[data-dtr-keyboard]');\n\n\t\tif (typeof target === 'number') {\n\t\t\tdt.cells(null, target, { page: 'current' })\n\t\t\t\t.nodes()\n\t\t\t\t.to$()\n\t\t\t\t.attr('tabIndex', ctx.iTabIndex)\n\t\t\t\t.data('dtr-keyboard', 1);\n\t\t}\n\t\telse {\n\t\t\t// This is a bit of a hack - we need to limit the selected nodes to just\n\t\t\t// those of this table\n\t\t\tif (target === 'td:first-child, th:first-child') {\n\t\t\t\ttarget = '>td:first-child, >th:first-child';\n\t\t\t}\n\n\t\t\t$(target, dt.rows({ page: 'current' }).nodes())\n\t\t\t\t.attr('tabIndex', ctx.iTabIndex)\n\t\t\t\t.data('dtr-keyboard', 1);\n\t\t}\n\t}\n});\n\n/**\n * List of default breakpoints. Each item in the array is an object with two\n * properties:\n *\n * * `name` - the breakpoint name.\n * * `width` - the breakpoint width\n *\n * @name Responsive.breakpoints\n * @static\n */\nResponsive.breakpoints = [\n\t{ name: 'desktop', width: Infinity },\n\t{ name: 'tablet-l', width: 1024 },\n\t{ name: 'tablet-p', width: 768 },\n\t{ name: 'mobile-l', width: 480 },\n\t{ name: 'mobile-p', width: 320 }\n];\n\n/**\n * Display methods - functions which define how the hidden data should be shown\n * in the table.\n *\n * @namespace\n * @name Responsive.defaults\n * @static\n */\nResponsive.display = {\n\tchildRow: function (row, update, render) {\n\t\tvar rowNode = $(row.node());\n\n\t\tif (update) {\n\t\t\tif (rowNode.hasClass('dtr-expanded')) {\n\t\t\t\trow.child(render(), 'child').show();\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (!rowNode.hasClass('dtr-expanded')) {\n\t\t\t\tvar rendered = render();\n\n\t\t\t\tif (rendered === false) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\trow.child(rendered, 'child').show();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\trow.child(false);\n\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t},\n\n\tchildRowImmediate: function (row, update, render) {\n\t\tvar rowNode = $(row.node());\n\n\t\tif (\n\t\t\t(!update && rowNode.hasClass('dtr-expanded')) ||\n\t\t\t!row.responsive.hasHidden()\n\t\t) {\n\t\t\t// User interaction and the row is show, or nothing to show\n\t\t\trow.child(false);\n\n\t\t\treturn false;\n\t\t}\n\t\telse {\n\t\t\t// Display\n\t\t\tvar rendered = render();\n\n\t\t\tif (rendered === false) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\trow.child(rendered, 'child').show();\n\n\t\t\treturn true;\n\t\t}\n\t},\n\n\t// This is a wrapper so the modal options for Bootstrap and jQuery UI can\n\t// have options passed into them. This specific one doesn't need to be a\n\t// function but it is for consistency in the `modal` name\n\tmodal: function (options) {\n\t\treturn function (row, update, render, closeCallback) {\n\t\t\tvar modal;\n\t\t\tvar rendered = render();\n\n\t\t\tif (rendered === false) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (!update) {\n\t\t\t\t// Show a modal\n\t\t\t\tvar close = function () {\n\t\t\t\t\tmodal.remove(); // will tidy events for us\n\t\t\t\t\t$(document).off('keypress.dtr');\n\t\t\t\t\t$(row.node()).removeClass('dtr-expanded');\n\n\t\t\t\t\tcloseCallback();\n\t\t\t\t};\n\n\t\t\t\tmodal = $('<div class=\"dtr-modal\"/>')\n\t\t\t\t\t.append(\n\t\t\t\t\t\t$('<div class=\"dtr-modal-display\"/>')\n\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\t$('<div class=\"dtr-modal-content\"/>')\n\t\t\t\t\t\t\t\t\t.data('dtr-row-idx', row.index())\n\t\t\t\t\t\t\t\t\t.append(rendered)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\t$(\n\t\t\t\t\t\t\t\t\t'<div class=\"dtr-modal-close\">&times;</div>'\n\t\t\t\t\t\t\t\t).click(function () {\n\t\t\t\t\t\t\t\t\tclose();\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t\t.append(\n\t\t\t\t\t\t$('<div class=\"dtr-modal-background\"/>').click(\n\t\t\t\t\t\t\tfunction () {\n\t\t\t\t\t\t\t\tclose();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t\t.appendTo('body');\n\n\t\t\t\t$(row.node()).addClass('dtr-expanded');\n\n\t\t\t\t$(document).on('keyup.dtr', function (e) {\n\t\t\t\t\tif (e.keyCode === 27) {\n\t\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\t\tclose();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmodal = $('div.dtr-modal-content');\n\n\t\t\t\tif (modal.length && row.index() === modal.data('dtr-row-idx')) {\n\t\t\t\t\tmodal.empty().append(rendered);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Modal not shown, nothing to update\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (options && options.header) {\n\t\t\t\t$('div.dtr-modal-content').prepend(\n\t\t\t\t\t'<h2>' + options.header(row) + '</h2>'\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t};\n\t}\n};\n\n/**\n * Display methods - functions which define how the hidden data should be shown\n * in the table.\n *\n * @namespace\n * @name Responsive.defaults\n * @static\n */\nResponsive.renderer = {\n\tlistHiddenNodes: function () {\n\t\treturn function (api, rowIdx, columns) {\n\t\t\tvar that = this;\n\t\t\tvar ul = $(\n\t\t\t\t'<ul data-dtr-index=\"' + rowIdx + '\" class=\"dtr-details\"/>'\n\t\t\t);\n\t\t\tvar found = false;\n\n\t\t\t$.each(columns, function (i, col) {\n\t\t\t\tif (col.hidden) {\n\t\t\t\t\tvar klass = col.className\n\t\t\t\t\t\t? 'class=\"' + col.className + '\"'\n\t\t\t\t\t\t: '';\n\n\t\t\t\t\t$(\n\t\t\t\t\t\t'<li ' +\n\t\t\t\t\t\t\tklass +\n\t\t\t\t\t\t\t' data-dtr-index=\"' +\n\t\t\t\t\t\t\tcol.columnIndex +\n\t\t\t\t\t\t\t'\" data-dt-row=\"' +\n\t\t\t\t\t\t\tcol.rowIndex +\n\t\t\t\t\t\t\t'\" data-dt-column=\"' +\n\t\t\t\t\t\t\tcol.columnIndex +\n\t\t\t\t\t\t\t'\">' +\n\t\t\t\t\t\t\t'<span class=\"dtr-title\">' +\n\t\t\t\t\t\t\tcol.title +\n\t\t\t\t\t\t\t'</span> ' +\n\t\t\t\t\t\t\t'</li>'\n\t\t\t\t\t)\n\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t$('<span class=\"dtr-data\"/>').append(\n\t\t\t\t\t\t\t\tthat._childNodes(\n\t\t\t\t\t\t\t\t\tapi,\n\t\t\t\t\t\t\t\t\tcol.rowIndex,\n\t\t\t\t\t\t\t\t\tcol.columnIndex\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) // api.cell( col.rowIndex, col.columnIndex ).node().childNodes ) )\n\t\t\t\t\t\t.appendTo(ul);\n\n\t\t\t\t\tfound = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn found ? ul : false;\n\t\t};\n\t},\n\n\tlistHidden: function () {\n\t\treturn function (api, rowIdx, columns) {\n\t\t\tvar data = $.map(columns, function (col) {\n\t\t\t\tvar klass = col.className\n\t\t\t\t\t? 'class=\"' + col.className + '\"'\n\t\t\t\t\t: '';\n\n\t\t\t\treturn col.hidden\n\t\t\t\t\t? '<li ' +\n\t\t\t\t\t\t\tklass +\n\t\t\t\t\t\t\t' data-dtr-index=\"' +\n\t\t\t\t\t\t\tcol.columnIndex +\n\t\t\t\t\t\t\t'\" data-dt-row=\"' +\n\t\t\t\t\t\t\tcol.rowIndex +\n\t\t\t\t\t\t\t'\" data-dt-column=\"' +\n\t\t\t\t\t\t\tcol.columnIndex +\n\t\t\t\t\t\t\t'\">' +\n\t\t\t\t\t\t\t'<span class=\"dtr-title\">' +\n\t\t\t\t\t\t\tcol.title +\n\t\t\t\t\t\t\t'</span> ' +\n\t\t\t\t\t\t\t'<span class=\"dtr-data\">' +\n\t\t\t\t\t\t\tcol.data +\n\t\t\t\t\t\t\t'</span>' +\n\t\t\t\t\t\t\t'</li>'\n\t\t\t\t\t: '';\n\t\t\t}).join('');\n\n\t\t\treturn data\n\t\t\t\t? $(\n\t\t\t\t\t\t'<ul data-dtr-index=\"' +\n\t\t\t\t\t\t\trowIdx +\n\t\t\t\t\t\t\t'\" class=\"dtr-details\"/>'\n\t\t\t\t).append(data)\n\t\t\t\t: false;\n\t\t};\n\t},\n\n\ttableAll: function (options) {\n\t\toptions = $.extend(\n\t\t\t{\n\t\t\t\ttableClass: ''\n\t\t\t},\n\t\t\toptions\n\t\t);\n\n\t\treturn function (api, rowIdx, columns) {\n\t\t\tvar data = $.map(columns, function (col) {\n\t\t\t\tvar klass = col.className\n\t\t\t\t\t? 'class=\"' + col.className + '\"'\n\t\t\t\t\t: '';\n\n\t\t\t\treturn (\n\t\t\t\t\t'<tr ' +\n\t\t\t\t\tklass +\n\t\t\t\t\t' data-dt-row=\"' +\n\t\t\t\t\tcol.rowIndex +\n\t\t\t\t\t'\" data-dt-column=\"' +\n\t\t\t\t\tcol.columnIndex +\n\t\t\t\t\t'\">' +\n\t\t\t\t\t'<td>' +\n\t\t\t\t\tcol.title +\n\t\t\t\t\t':' +\n\t\t\t\t\t'</td> ' +\n\t\t\t\t\t'<td>' +\n\t\t\t\t\tcol.data +\n\t\t\t\t\t'</td>' +\n\t\t\t\t\t'</tr>'\n\t\t\t\t);\n\t\t\t}).join('');\n\n\t\t\treturn $(\n\t\t\t\t'<table class=\"' +\n\t\t\t\t\toptions.tableClass +\n\t\t\t\t\t' dtr-details\" width=\"100%\"/>'\n\t\t\t).append(data);\n\t\t};\n\t}\n};\n\n/**\n * Responsive default settings for initialisation\n *\n * @namespace\n * @name Responsive.defaults\n * @static\n */\nResponsive.defaults = {\n\t/**\n\t * List of breakpoints for the instance. Note that this means that each\n\t * instance can have its own breakpoints. Additionally, the breakpoints\n\t * cannot be changed once an instance has been creased.\n\t *\n\t * @type {Array}\n\t * @default Takes the value of `Responsive.breakpoints`\n\t */\n\tbreakpoints: Responsive.breakpoints,\n\n\t/**\n\t * Enable / disable auto hiding calculations. It can help to increase\n\t * performance slightly if you disable this option, but all columns would\n\t * need to have breakpoint classes assigned to them\n\t *\n\t * @type {Boolean}\n\t * @default  `true`\n\t */\n\tauto: true,\n\n\t/**\n\t * Details control. If given as a string value, the `type` property of the\n\t * default object is set to that value, and the defaults used for the rest\n\t * of the object - this is for ease of implementation.\n\t *\n\t * The object consists of the following properties:\n\t *\n\t * * `display` - A function that is used to show and hide the hidden details\n\t * * `renderer` - function that is called for display of the child row data.\n\t *   The default function will show the data from the hidden columns\n\t * * `target` - Used as the selector for what objects to attach the child\n\t *   open / close to\n\t * * `type` - `false` to disable the details display, `inline` or `column`\n\t *   for the two control types\n\t *\n\t * @type {Object|string}\n\t */\n\tdetails: {\n\t\tdisplay: Responsive.display.childRow,\n\n\t\trenderer: Responsive.renderer.listHidden(),\n\n\t\ttarget: 0,\n\n\t\ttype: 'inline'\n\t},\n\n\t/**\n\t * Orthogonal data request option. This is used to define the data type\n\t * requested when Responsive gets the data to show in the child row.\n\t *\n\t * @type {String}\n\t */\n\torthogonal: 'display'\n};\n\n/*\n * API\n */\nvar Api = $.fn.dataTable.Api;\n\n// Doesn't do anything - work around for a bug in DT... Not documented\nApi.register('responsive()', function () {\n\treturn this;\n});\n\nApi.register('responsive.index()', function (li) {\n\tli = $(li);\n\n\treturn {\n\t\tcolumn: li.data('dtr-index'),\n\t\trow: li.parent().data('dtr-index')\n\t};\n});\n\nApi.register('responsive.rebuild()', function () {\n\treturn this.iterator('table', function (ctx) {\n\t\tif (ctx._responsive) {\n\t\t\tctx._responsive._classLogic();\n\t\t}\n\t});\n});\n\nApi.register('responsive.recalc()', function () {\n\treturn this.iterator('table', function (ctx) {\n\t\tif (ctx._responsive) {\n\t\t\tctx._responsive._resizeAuto();\n\t\t\tctx._responsive._resize();\n\t\t}\n\t});\n});\n\nApi.register('responsive.hasHidden()', function () {\n\tvar ctx = this.context[0];\n\n\treturn ctx._responsive\n\t\t? $.inArray(false, ctx._responsive._responsiveOnlyHidden()) !== -1\n\t\t: false;\n});\n\nApi.registerPlural(\n\t'columns().responsiveHidden()',\n\t'column().responsiveHidden()',\n\tfunction () {\n\t\treturn this.iterator(\n\t\t\t'column',\n\t\t\tfunction (settings, column) {\n\t\t\t\treturn settings._responsive\n\t\t\t\t\t? settings._responsive._responsiveOnlyHidden()[column]\n\t\t\t\t\t: false;\n\t\t\t},\n\t\t\t1\n\t\t);\n\t}\n);\n\n/**\n * Version information\n *\n * @name Responsive.version\n * @static\n */\nResponsive.version = '3.0.2';\n\n$.fn.dataTable.Responsive = Responsive;\n$.fn.DataTable.Responsive = Responsive;\n\n// Attach a listener to the document which listens for DataTables initialisation\n// events so we can automatically initialise\n$(document).on('preInit.dt.dtr', function (e, settings, json) {\n\tif (e.namespace !== 'dt') {\n\t\treturn;\n\t}\n\n\tif (\n\t\t$(settings.nTable).hasClass('responsive') ||\n\t\t$(settings.nTable).hasClass('dt-responsive') ||\n\t\tsettings.oInit.responsive ||\n\t\tDataTable.defaults.responsive\n\t) {\n\t\tvar init = settings.oInit.responsive;\n\n\t\tif (init !== false) {\n\t\t\tnew Responsive(settings, $.isPlainObject(init) ? init : {});\n\t\t}\n\t}\n});\n\n\nexport default DataTable;\n"],
  "mappings": "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",
  "names": ["jQuery", "idx", "details", "i", "column", "res"]
}
